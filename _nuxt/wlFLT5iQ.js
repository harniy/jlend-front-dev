import{d as g,J as E,c as u,Q as I,N as F,g as J,s as T,aA as U,a0 as W,M as N,v as z,a1 as H,Y as K,aB as P,a2 as Q,al as Y,a5 as X,h as Z,o as f,l as ee,A as ae,a as b,j as h,e as le,p as $,u as t,aC as te,E as se,k as _,r as oe,w as q,n as ue,b as ne,i as re}from"./CFNTmiT0.js";import{j as ie}from"./_bNdCwc-.js";const de=g({name:"ConditionalWrapper",inheritAttrs:!1,props:{tag:{type:String,default:"div"},skip:{type:Boolean,required:!0}},slots:Object,setup(s,{slots:e,attrs:d}){return()=>{var n,o;return s.skip?(n=e.default)==null?void 0:n.call(e,{}):E(s.tag,{...d},[(o=e.default)==null?void 0:o.call(e,{})])}}}),ce=s=>u(()=>{const e=I(s);return{"form-check":e.plain===!1&&e.button===!1&&e.hasDefaultSlot,"form-check-reverse":e.reverse===!0,"form-check-inline":e.inline===!0,"form-switch":e.switch===!0,[`form-control-${e.size}`]:e.size!==void 0&&e.size!=="md"&&e.button===!1}}),fe=s=>{const e=F(J(s)),d=ie(()=>e.value.state??null);return u(()=>[d.value,{"form-check-input":e.value.plain===!1&&e.value.button===!1,"btn-check":e.value.button===!0}])},ve=s=>u(()=>{const e=I(s);return{"form-check-label":e.plain===!1&&e.button===!1,btn:e.button===!0,[`btn-${e.buttonVariant}`]:e.button===!0&&e.buttonVariant!==void 0&&e.buttonVariant!==null,[`btn-${e.size}`]:e.button&&e.size&&e.size!=="md"}}),pe=["id","disabled","required","name","form","aria-label","aria-labelledby","aria-required","value","true-value","false-value","indeterminate"],me=["for"],be=g({inheritAttrs:!1,__name:"BFormCheckbox",props:T({ariaLabel:{default:void 0},ariaLabelledby:{default:void 0},autofocus:{type:Boolean,default:!1},button:{type:Boolean,default:!1},buttonGroup:{type:Boolean,default:!1},buttonVariant:{default:null},disabled:{type:Boolean,default:!1},form:{default:void 0},id:{default:void 0},inline:{type:Boolean,default:!1},name:{default:void 0},plain:{type:Boolean,default:!1},required:{type:Boolean,default:void 0},reverse:{type:Boolean,default:!1},size:{default:void 0},state:{type:[Boolean,null],default:null},switch:{type:Boolean,default:!1},uncheckedValue:{type:[Array,Set,String,Boolean,Object,Number,null],default:!1},wrapperAttrs:{default:void 0},inputClass:{default:void 0},value:{type:[String,Boolean,Array,Set,Object,Number,null],default:!0}},{modelValue:{type:[Array,Set,String,Boolean,Object,Number,null],default:void 0},modelModifiers:{},indeterminate:{type:Boolean,default:!1},indeterminateModifiers:{}}),emits:["update:modelValue","update:indeterminate"],setup(s,{expose:e}){const d=U(),n=u(()=>{const{class:i,...m}=d;return{wrapperClass:i,inputAttrs:m}}),l=W(s,"BFormCheckbox"),r=N(),c=z(s,"modelValue"),v=z(s,"indeterminate"),p=H(()=>l.id,"form-check"),a=K(P,null),k=Q("_input"),{focused:V}=Y(k,{initialValue:l.autofocus}),B=u(()=>!X(r.default)),C=u({get:()=>a?a.modelValue.value:c.value,set:i=>{if(i!==void 0){if(v.value=!1,a!==null&&Array.isArray(i)){a.modelValue.value=i;return}c.value=i}}}),A=u(()=>!!(l.name??a?.name.value)&&(l.required||a?.required.value)),x=u(()=>l.buttonGroup||(a?.buttons.value??!1)),y=u(()=>({plain:l.plain||(a?.plain.value??!1),button:l.button||(a?.buttons.value??!1),inline:l.inline||(a?.inline.value??!1),reverse:l.reverse||(a?.reverse.value??!1),switch:l.switch||(a?.switch.value??!1),state:l.state===!0||l.state===!1?l.state:a?.state.value??null,size:l.size??a?.size.value??"md",buttonVariant:l.buttonVariant??a?.buttonVariant.value??"secondary",hasDefaultSlot:B.value})),D=ce(y),M=u(()=>[D.value,n.value.wrapperClass]),O=fe(y),L=u(()=>[O.value,l.inputClass]),G=ve(y);return e({blur:()=>{V.value=!1},element:k,focus:()=>{V.value=!0}}),(i,m)=>(f(),Z(de,$({skip:x.value},t(l).wrapperAttrs,{class:M.value}),{default:ee(()=>{var S,w,j;return[ae(le("input",$({id:t(p),ref:"_input","onUpdate:modelValue":m[0]||(m[0]=R=>C.value=R),class:L.value,type:"checkbox",disabled:t(l).disabled||((S=t(a))==null?void 0:S.disabled.value),required:A.value||void 0,name:t(l).name||((w=t(a))==null?void 0:w.name.value),form:t(l).form||((j=t(a))==null?void 0:j.form.value),"aria-label":t(l).ariaLabel,"aria-labelledby":t(l).ariaLabelledby,"aria-required":A.value||void 0,value:t(l).value,"true-value":t(l).value,"false-value":t(l).uncheckedValue,indeterminate:v.value||void 0},n.value.inputAttrs),null,16,pe),[[te,C.value]]),B.value||t(l).plain===!1?(f(),b("label",{key:0,for:t(p),class:se(t(G))},[_(i.$slots,"default")],10,me)):h("",!0)]}),_:3},16,["skip","class"]))}}),ye={key:0,class:"j-toggle__label"},he={key:1,class:"j-toggle__label"},_e=g({__name:"JToggle",props:{modelValue:{type:Boolean},disabled:{type:Boolean,default:!1},color:{}},emits:["update:modelValue"],setup(s,{emit:e}){const d=e,n=N(),o=oe(!1);function l(){s.disabled||(o.value=!o.value)}return q(o,()=>{d("update:modelValue",o.value)}),q(()=>s.modelValue,r=>{o.value=r},{immediate:!0}),(r,c)=>{const v=be;return f(),b("div",{class:"j-toggle",style:ue({"--toggle-color":r.color}),onClick:l},[n?.prepend?(f(),b("div",ye,[_(r.$slots,"prepend")])):h("",!0),ne(v,{modelValue:t(o),"onUpdate:modelValue":c[0]||(c[0]=p=>re(o)?o.value=p:null),disabled:r.disabled,switch:""},null,8,["modelValue","disabled"]),n?.append?(f(),b("div",he,[_(r.$slots,"append")])):h("",!0)],4)}}}),Ve=Object.assign(_e,{__name:"JToggle"});export{be as _,Ve as a};
